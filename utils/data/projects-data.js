import ayla from '/public/image/ayla.jpg';
import crefin from '/public/image/crefin.jpg';
import realEstate from '/public/image/real-estate.jpg';
import travel from '/public/image/travel.jpg';

export const projectsData = [
    {
        id: 1,
        name: 'Generating Commentary from Cricket Clips',
        title: 'AI-Powered Commentary Generation for Cricket Clips',
        description:
            'Built a multimodal deep learning system combining a Vision Transformer, LSTM, and GPT-4 to generate expert-level cricket commentary from video clips. Created a custom annotated dataset of 356 deliveries, predicted seven key match events, and integrated ElevenLabs TTS to produce real-time spoken commentary through a Streamlit interface:contentReference[oaicite:1]{index=1}.',
        tools: ['PyTorch', 'Vision Transformer', 'LSTM', 'GPT-4', 'Streamlit', 'ElevenLabs TTS'],
        role: 'Deep Learning Research & Full-Stack Development',
        code: '',
        demo: 'https://youtu.be/8REAQg0Wgn0',
        live: '',
        image: ayla,
    },
    {
        id: 2,
        name: 'Movie Watchlist',
        title: 'Personal Movie Watchlist Web Application',
        description:
            'Developed a React + Firebase web app to track and share a personal movie watchlist. Features include scrapbook grid view, blurred-poster guessing mini-game, progress tracking, star ratings, and cloud sync across devices.',
        tools: ['React', 'Firebase', 'TMDb API', 'CSS'],
        role: 'Full Stack Developer',
        code: '',
        demo: '',
        live: 'https://advi-movie-list.netlify.app/',
        image: ayla,
    },
    {
        id: 3,
        name: 'GhostWhisp',
        title: 'Ephemeral Encrypted Burner Chat Application',
        description:
            'Created a secure chat app with FastAPI WebSockets and React, featuring ECDH key exchange, AES-GCM encrypted messages, ephemeral sessions with graceful exits, emoji reactions, typing indicators, and image sharing. Built with a privacy-first design where no data is stored after sessions end.',
        tools: ['React', 'FastAPI', 'WebSockets', 'ECDH', 'AES-GCM'],
        role: 'Full Stack Developer',
        code: '',
        demo: '',
        live: 'https://ghostwhisp.netlify.app/',
        image: ayla,
    },
    {
        id: 4,
        name: 'Open-Source LLMs Code Generation',
        title: 'Evaluating Exhaustiveness of Synthetic Code Generated by Open Source LLMs',
        description:
            "Conducted a comparative analysis of Gemini and Llama-2 models for code generation tasks, demonstrating Gemini's superior performance across multiple programming languages. Highlighted Python's exceptional results due to its high-level syntax and rich ecosystem, underscoring the impact of model architecture and training methodologies.",
        tools: ['Gemini API', 'Llama2', 'Chat GPT', 'Python', 'Java', 'C++', 'Javascript'],
        role: 'Analyzing EvalPlus Framework & Generation of Seed Inputs',
        code: '',
        demo: '',
        live: '',
        image: crefin,
    },
    {
        id: 5,
        name: 'Localizing Moments in Surveillance Videos',
        title: 'Localizing Moments in Surveillance Videos using Natural Language Queries',
        description:
            'Developed a multi-modal system for smart city security that localizes moments in long CCTV video streams based on natural language queries. Introduced a novel dataset, "CamPark-Captions," and built a large-scale multimodal neural network architecture to enhance real-time crime detection and prevention. The system automates surveillance video screening, streamlining tasks that are otherwise manually intensive, with rigorous robustness testing to handle varying inputs.',
        tools: ['NLP', 'Deep Learning', 'Python'],
        role: 'Transformer Coding & Front-end management',
        code: '',
        demo: 'https://youtu.be/u2FIUYIaQOA?si=rcPk9DJwZFjJaPl6&t=311',
        live: '',
        image: travel,
    },
    {
        id: 6,
        name: 'Stock Trading App',
        title: 'Stock Trading Web Application',
        description:
            'A stock trading web application that lets you search stocks, add favorites, and build a portfolio by buying or selling stocks.',
        tools: ['Angular', 'Bootstrap', 'Express', 'TypeScript', 'MongoDB'],
        code: '',
        role: 'Full Stack Developer',
        demo: 'https://youtu.be/e0ax975GD4w',
        live: '',
        image: realEstate,
    },
    {
        id: 7,
        name: 'Blockchain-Based Crowdfunding Application',
        title: 'Blockchain-Based Crowdfunding Web Application',
        description:
            "Developed a decentralized crowdfunding web application using blockchain technology to ensure transparency, security, and guaranteed returns for backers. The platform allows backers to track project progress in real-time, ensures refunds if projects are aborted, and provides seamless interactions between admins, backers, and start-ups. Smart contracts automate transactions, eliminating third-party involvement and enhancing trust.",
        tools: ['Solidity', 'Ganache', 'Django', 'Bootstrap'],
        code: '',
        role: 'Full Stack Developer',
        demo: 'https://youtu.be/fjc8CI-4zL4',
        live: '',
        image: ayla,
    },
];
